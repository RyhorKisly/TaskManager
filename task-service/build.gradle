plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.2'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'by.itacademy'
version = '0.1.0'

java {
	sourceCompatibility = '17'
}

repositories {
	mavenCentral()
	mavenLocal()
}

ext {
	springCloudVersion = "2022.0.4"
	jjwtVersion = "0.9.1"
	jaxbApiVersion = "2.3.1"
	sharedResource = "1.0.0"
	sharedResourceVersion = "1.0.0"
	mapstructVersion = "1.5.5.Final"
	springdocVersion = "2.5.0"

}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	implementation 'org.springframework.cloud:spring-cloud-starter-circuitbreaker-resilience4j'
	implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:${springdocVersion}"

	runtimeOnly 'org.postgresql:postgresql'
	implementation 'org.flywaydb:flyway-core'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	implementation "org.mapstruct:mapstruct:${mapstructVersion}"
	annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"

	implementation "io.jsonwebtoken:jjwt:${jjwtVersion}"
	implementation "javax.xml.bind:jaxb-api:${jaxbApiVersion}"
	compileOnly "by.itacademy:shared-resource:${sharedResource}"

	implementation "by.itacademy:shared-resource:${sharedResourceVersion}"

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

tasks.named('test') {
	useJUnitPlatform()
	enabled = false
}
